Recortar un string vvv 

string = "Camasutra"
string_recortado = string[:-5]
print(string)
print(string_recortado)

-----

Validar si puedo convertir un string en float vvv 

entrada = "314.159"

try:
    valor_float = float(entrada)
    print(f"El valor '{entrada}' se puede convertir a float: {valor_float}")
except ValueError:
    print(f"El valor '{entrada}' no se puede convertir a float.")

-----

Verificar tipo de dato

print(type(123))
print(type(1.23))
print(type("123"))
print(type(["123"]))
print( type( {"number": 123} ) )
print(type(True))

-----

compresion de dicionarios 

def formatear_diccionario(diccionario, claves):
    nuevo_diccionario = [{clave: persona[clave] for clave in claves} for persona in diccionario]
    return nuevo_diccionario

personas = [
    {
        "nombre": "Lionel",
        "apellido": "Prats",
        "edad": "38"
    },
    {
        "nombre": "Sergio",
        "apellido": "Balestrini",
        "edad": "39"
    },
    {
        "nombre": "Santiago",
        "apellido": "Fiorini",
        "edad": "40"
    }
]

claves_a_seleccionar = ["nombre", "edad"]
claves_a_seleccionar = ["apellido", "edad"]
claves_a_seleccionar = ["nombre"]
claves_a_seleccionar = ["apellido"]
claves_a_seleccionar = ["edad"]
claves_a_seleccionar = ["nombre", "apellido"]
claves_a_seleccionar = ["edad", "apellido"]

print(personas)
print(formatear_diccionario(personas, claves_a_seleccionar))

-----

funciones max() y min()

array = [70, 54, 16, 51]
print(max(array))
print(min(array))

listado_personas = [
{
    "nombre": "lionel",
    "edad": 2315,
    "velocidad": 83.5151151531,
    "fuerza": 7.75862
},
{
    "nombre": "rocio",
    "edad": 2300,
    "velocidad": 84,
    "fuerza": 7
},
{
    "nombre": "carolina",
    "edad": 270,
    "velocidad": 83,
    "fuerza": 6
}
]

# MAXIMOS vvv 
edad_maxima = max(listado_personas, key = lambda diccionario_persona: diccionario_persona['edad'])['edad']
print(f"edad maxima = {edad_maxima}")

velocidad_maxima = max(listado_personas, key = lambda diccionario_persona: diccionario_persona['velocidad'])['velocidad']
print(f"velocidad maxima = {velocidad_maxima}")

fuerza_maxima = max(listado_personas, key = lambda diccionario_persona: diccionario_persona['fuerza'])['fuerza']
print(f"fuerza maxima = {fuerza_maxima}")

# MINIMOS vvv
edad_minima = min(listado_personas, key = lambda diccionario_persona: diccionario_persona['edad'])['edad']
print(f"edad minima = {edad_minima}")

velocidad_minima = min(listado_personas, key = lambda diccionario_persona: diccionario_persona['velocidad'])['velocidad']
print(f"velocidad minima = {velocidad_minima}")

fuerza_minima = min(listado_personas, key = lambda diccionario_persona: diccionario_persona['fuerza'])['fuerza']
print(f"fuerza minima = {fuerza_minima}")

----- 

FUNCIONES LAMBDA

# -> las funciones lambda o anonimas son una manera abreviada de escribir una funcion simple. 
# -> segun la documentacion de python "... son solo una notacion abreviada si eres demasiado perezoso para definir una funcion"

# Ejemplos

def sumar(a, b):
    return a + b

sumar_lambda = lambda a, b: a + b

print(sumar_lambda(10, 8))

# con lambda es comun usar metodos y funciones propias de python como map y filter

----- 

OPERADORES TERNARIOS (mas conocidos en python como EXPRESIONES CONDICIONALES) 

mayor = lambda a, b: f"{a}.1 es mayor" if a > b else f"{b}.2 es mayor"
print(mayor(26,26)) 

# if 8 > 4 ? True : False
print(True if 8 > 9 else False)

input_nombre_usuario = "None"
input_nombre_usuario = None
print(input_nombre_usuario if input_nombre_usuario else "No est√° definido")

----- 

LISTAS ANIDADAS